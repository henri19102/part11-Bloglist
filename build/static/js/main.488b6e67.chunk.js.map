{"version":3,"sources":["components/Notification.js","components/Togglable.js","components/NewBlog.js","components/BlogsList.js","components/BlogDetails.js","services/login.js","services/users.js","services/comments.js","utils/storage.js","reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","reducers/userReducer.js","App.js","store.js","index.js"],"names":["Notification","variant1","notification","useSelector","state","style","msg","display","suc","Alert","variant","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","Button","onClick","buttonLabel","className","children","displayName","NewBlog","title","setTitle","author","setAuthor","url","setUrl","Form","onSubmit","event","preventDefault","createBlog","Group","Label","Control","size","value","onChange","target","type","BlogsList","blogs","ListGroup","as","map","b","Item","key","id","to","BlogDetails","comments","handleLike","handleRemove","createComment","comment1","setComment1","history","useHistory","idBlog","useParams","newObj","comment","blogID","blog","find","x","blogsComments","filter","console","log","user","name","href","likes","e","margin","login","credentials","a","axios","post","response","data","get","then","getAll","newComment","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","notificationReducer","action","message","success","getConfig","headers","Authorization","storage","token","put","delete","byLikes","a1","a2","blogReducer","sort","setUser","userReducer","App","dispatch","useDispatch","username","setUsername","password","setPassword","users","setUsers","setComments","blogFormRef","createRef","useEffect","usersService","allUsers","getUsers","commentsService","allComments","getComments","blogService","notifyWith","setTimeout","newNotification","concat","handleLogin","loginService","handleLogout","Users","u","length","UserDetails","Menu","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Link","Text","path","blog1","blog2","blogToRemove","window","confirm","deleteBlog","push","newBlog","createNewBlog","controlId","placeholder","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.488b6e67.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector((state) => state.notification);\r\n\r\n  let style = {};\r\n  let variant1;\r\n  if (notification.msg === \"\") {\r\n    style = { display: \"none\" };\r\n  }\r\n  if (notification.suc === \"success\") {\r\n    variant1 = \"success\";\r\n  } else {\r\n    variant1 = \"danger\";\r\n  }\r\n\r\n  return (\r\n    <div style={style}>\r\n      {\" \"}\r\n      {notification.msg && <Alert variant={variant1}>{notification.msg}</Alert>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useImperativeHandle } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <Button onClick={toggleVisibility}>cancel</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nTogglable.displayName = \"Togglable\";\r\n\r\nexport default Togglable;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst NewBlog = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  const handleNewBlog = (event) => {\r\n    event.preventDefault();\r\n\r\n    props.createBlog({ title, author, url });\r\n\r\n    setTitle(\"\");\r\n    setAuthor(\"\");\r\n    setUrl(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create new</h2>\r\n      <Form onSubmit={handleNewBlog}>\r\n        <Form.Group>\r\n          <Form.Label>Author</Form.Label>\r\n          <Form.Control\r\n            size=\"sm\"\r\n            value={author}\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            size=\"sm\"\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>URL</Form.Label>\r\n          <Form.Control\r\n            size=\"sm\"\r\n            value={url}\r\n            onChange={({ target }) => setUrl(target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\">create</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBlog;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nconst BlogsList = ({ blogs }) => {\r\n  return (\r\n    <div>\r\n      <ListGroup as=\"ul\">\r\n        {blogs.map((b) => (\r\n          <ListGroup.Item as=\"li\" key={b.id}>\r\n            <Link to={`/blogs/${b.id}`}> {b.title} </Link>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogsList;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Form, Button, ListGroup } from \"react-bootstrap\";\r\n\r\nconst BlogDetails = ({\r\n  blogs,\r\n  comments,\r\n  handleLike,\r\n  handleRemove,\r\n  createComment,\r\n}) => {\r\n  const [comment1, setComment1] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const idBlog = useParams().id;\r\n  const newObj = { comment: comment1, blogID: idBlog };\r\n\r\n  const blog = blogs.find((x) => x.id === idBlog);\r\n  const blogsComments = comments.filter((x) => x.blogID === idBlog);\r\n  console.log(blogsComments);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createComment(newObj);\r\n    setComment1(\"\");\r\n  };\r\n\r\n  if (!blog) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{blog.title}</h2>\r\n      <h4>added by {blog.user.name}</h4>\r\n      <a href={blog.url}>{blog.url}</a>\r\n      <h4>\r\n        likes: {blog.likes}{\" \"}\r\n        <Button onClick={() => handleLike(blog.id)}>like</Button>\r\n      </h4>\r\n      <h3>comments</h3>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            value={comment1}\r\n            onChange={({ target }) => setComment1(target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\">\r\n          add comment\r\n        </Button>\r\n      </Form>\r\n      <ListGroup style={{ margin: \"1%\" }}>\r\n        {blogsComments.map((x) => (\r\n          <ListGroup.Item key={x.id}>{x.comment}</ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n      <Button variant=\"danger\" onClick={() => handleRemove(blog.id, history)}>\r\n        remove blog\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/users\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll };\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/comments\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst newComment = async (comment) => {\r\n  const response = await axios.post(baseUrl, comment);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAll, newComment };\r\n","const storageKey = \"loggedBlogAppUser\";\r\n\r\nconst saveUser = (user) =>\r\n  localStorage.setItem(storageKey, JSON.stringify(user));\r\n\r\nconst loadUser = () => JSON.parse(localStorage.getItem(storageKey));\r\n\r\nconst logoutUser = () => localStorage.removeItem(storageKey);\r\n\r\nexport default {\r\n  saveUser,\r\n  loadUser,\r\n  logoutUser,\r\n};\r\n","let newObj = { msg: \"\", suc: \"\" };\r\n\r\nexport const newNotification = (message, success) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"MESSAGE\", message, success });\r\n    setTimeout(() => {\r\n      dispatch({ type: \"BACK\" });\r\n    }, 5000);\r\n  };\r\n};\r\n\r\nconst notificationReducer = (state = newObj, action) => {\r\n  switch (action.type) {\r\n  case \"BACK\":\r\n    return newObj;\r\n  case \"MESSAGE\":\r\n    return { msg: action.message, suc: action.success };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default notificationReducer;\r\n","import axios from \"axios\";\r\nimport storage from \"../utils/storage\";\r\n\r\nconst baseUrl = \"/api/blogs\";\r\n\r\nconst getConfig = () => {\r\n  return {\r\n    headers: { Authorization: `bearer ${storage.loadUser().token}` },\r\n  };\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (blog) => {\r\n  const request = axios.post(baseUrl, blog, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (blog) => {\r\n  const request = axios.put(`${baseUrl}/${blog.id}`, blog, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, getConfig());\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","import blogService from \"../services/blogs\";\r\n\r\nconst byLikes = (a1, a2) => a2.likes - a1.likes;\r\n\r\nexport const allBlogs = () => {\r\n  return async (dispatch) => {\r\n    const blogs = await blogService.getAll();\r\n    dispatch({\r\n      type: \"ALL\",\r\n      data: blogs,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createNewBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    const newBlog = await blogService.create(blog);\r\n    dispatch({\r\n      type: \"NEW_BLOG\",\r\n      data: newBlog,\r\n    });\r\n  };\r\n};\r\n\r\nexport const likeBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    const data = await blogService.update(blog);\r\n    dispatch({\r\n      type: \"LIKE\",\r\n      data,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async (dispatch) => {\r\n    await blogService.remove(id);\r\n    dispatch({\r\n      type: \"DELETE\",\r\n      data: id,\r\n    });\r\n  };\r\n};\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case \"ALL\":\r\n    return action.data;\r\n  case \"NEW_BLOG\":\r\n    return [...state, action.data];\r\n  case \"LIKE\":\r\n    return state.map((a) => (a.id === action.data.id ? action.data : a)).sort(byLikes);\r\n  case \"DELETE\":\r\n    return state.filter((b) => b.id !== action.data);\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default blogReducer;\r\n","export const setUser = (user) => {\r\n  return {\r\n    type: \"SET\",\r\n    user,\r\n  };\r\n};\r\n\r\nconst userReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case \"SET\":\r\n    return action.user;\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Notification from \"./components/Notification\";\r\nimport Togglable from \"./components/Togglable\";\r\nimport NewBlog from \"./components/NewBlog\";\r\nimport BlogsList from \"./components/BlogsList\";\r\nimport BlogDetails from \"./components/BlogDetails\";\r\nimport loginService from \"./services/login\";\r\nimport usersService from \"./services/users\";\r\nimport commentsService from \"./services/comments\";\r\nimport storage from \"./utils/storage\";\r\nimport { newNotification } from \"./reducers/notificationReducer\";\r\nimport {\r\n  allBlogs,\r\n  createNewBlog,\r\n  likeBlog,\r\n  deleteBlog,\r\n} from \"./reducers/blogReducer\";\r\nimport { setUser } from \"./reducers/userReducer\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\nimport { Form, Button, Navbar, Nav, ListGroup } from \"react-bootstrap\";\r\n\r\nconst App = () => {\r\n  const blogs = useSelector((state) => state.blog);\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const blogFormRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      const allUsers = await usersService.getAll();\r\n      setUsers(allUsers);\r\n    };\r\n    getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getComments = async () => {\r\n      const allComments = await commentsService.getAll();\r\n      setComments(allComments);\r\n    };\r\n    getComments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(allBlogs());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const user = storage.loadUser();\r\n    dispatch(setUser(user));\r\n  }, [dispatch]);\r\n\r\n  const notifyWith = (message, success) => {\r\n    dispatch(newNotification(message, success));\r\n  };\r\n  const createBlog = (blog) => {\r\n    dispatch(createNewBlog(blog));\r\n    notifyWith(\r\n      `a new blog '${blog.title}' by ${blog.author} added!`,\r\n      \"success\"\r\n    );\r\n  };\r\n\r\n  const createComment = async (comment) => {\r\n    try {\r\n      const newComment = await commentsService.newComment(comment);\r\n      setComments(comments.concat(newComment));\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n\r\n  const handleRemove = (id, history) => {\r\n    const blogToRemove = blogs.find((b) => b.id === id);\r\n    const ok = window.confirm(\r\n      `Remove blog ${blogToRemove.title} by ${blogToRemove.author}`\r\n    );\r\n    if (ok) {\r\n      dispatch(deleteBlog(blogToRemove.id));\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleLike = (id) => {\r\n    const blog1 = blogs.find((b) => b.id === id);\r\n    const blog2 = { ...blog1, likes: blog1.likes + 1, user: blog1.user.id };\r\n    dispatch(likeBlog(blog2));\r\n  };\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password,\r\n      });\r\n\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      dispatch(setUser(user));\r\n      notifyWith(`${user.name} welcome back!`, \"success\");\r\n      storage.saveUser(user);\r\n    } catch (exception) {\r\n      notifyWith(\"wrong username/password\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(setUser(null));\r\n    storage.logoutUser();\r\n  };\r\n\r\n  const Users = () => {\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        <ListGroup as=\"ul\">\r\n          {users.map((u) => (\r\n            <ListGroup.Item as=\"li\" key={u.id}>\r\n              <Link to={`/users/${u.id}`}>\r\n                {\" \"}\r\n                {u.name}, blogs: {u.blogs.length}{\" \"}\r\n              </Link>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const UserDetails = ({ users }) => {\r\n    const id = useParams().id;\r\n    const user = users.find((x) => x.id === id);\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    if (user.blogs.length === 0) {\r\n      return (\r\n        <div>\r\n          <h2>{user.name}</h2>\r\n          <h3>added blogs</h3>\r\n          <p>none...</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>{user.name}</h2>\r\n        <h4>Users blogs:</h4>\r\n        <ListGroup>\r\n          {user.blogs.map((b) => (\r\n            <ListGroup.Item key={b.id}>{b.title}</ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Menu = () => {\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link>\r\n                <Link className=\"navFont\" to=\"/\">\r\n                  Blogs\r\n                </Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link className=\"navFont\" to=\"/users\">\r\n                  Users\r\n                </Link>\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n              <Navbar.Text>Signed in as:</Navbar.Text>\r\n              <Navbar.Text className=\"navText\"> {user.name}</Navbar.Text>\r\n              <Nav.Link>\r\n                <Button onClick={handleLogout}>logout</Button>\r\n              </Nav.Link>\r\n            </Navbar.Collapse>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Login to application</h2>\r\n        <Notification />\r\n        <Form onSubmit={handleLogin}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              placeholder=\"Enter username\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            login\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Menu />\r\n        <h2>Blogs</h2>\r\n        <Notification />\r\n        <Switch>\r\n          <Route path=\"/blogs/:id\">\r\n            <BlogDetails\r\n              blogs={blogs}\r\n              comments={comments}\r\n              handleLike={handleLike}\r\n              handleRemove={handleRemove}\r\n              createComment={createComment}\r\n            />\r\n          </Route>\r\n          <Route path=\"/users/:id\">\r\n            <UserDetails users={users} />\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Togglable buttonLabel=\"create new blog\" ref={blogFormRef}>\r\n              <NewBlog createBlog={createBlog} />\r\n            </Togglable>\r\n            <BlogsList blogs={blogs} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport notificationReducer from \"./reducers/notificationReducer\";\r\nimport blogReducer from \"./reducers/blogReducer\";\r\nimport userReducer from \"./reducers/userReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  blog: blogReducer,\r\n  user: userReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}